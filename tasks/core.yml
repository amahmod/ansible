- name: Install build tools
  become: true
  apt:
      name: '{{ item }}'
      state: present
  with_items:
      - which
      - curl
      - git
      - build-essential
      - libssl-dev
      - cmake
      - pkg-config
      - gettext
      - fontconfig
      - fzf
      - fonts-symbola
      - rofi
      - ripgrep
  tags:
      - install
      - core

- name: Install lazygit
  become: true
  shell: |
      LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": *"v\K[^"]*')
      curl -Lo /tmp/lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
      tar xf /tmp/lazygit.tar.gz -C /tmp lazygit
      install /tmp/lazygit -D -t /usr/local/bin
      rm -f /tmp/lazygit.tar.gz /tmp/lazygit
  tags:
      - install
      - core
      - lazygit

- name: Install Rust
  block:
      - name: Check if Rust is already installed
        command: which rustc
        register: rust_check
        ignore_errors: true
        changed_when: false

      - name: Create cargo directory
        file:
            path: '{{ ansible_env.HOME }}/.cargo/bin'
            state: directory
            mode: '0755'
        when: rust_check.rc != 0

      - name: Download rustup
        get_url:
            url: https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init
            dest: '{{ ansible_env.HOME }}/.cargo/bin/rustup-init'
            mode: '0755'
        when: rust_check.rc != 0

      - name: Run rustup installation
        shell: '{{ ansible_env.HOME }}/.cargo/bin/rustup-init -y --no-modify-path'
        environment:
            PATH: '{{ ansible_env.HOME }}/.cargo/bin:{{ ansible_env.PATH }}'
        when: rust_check.rc != 0
  tags:
      - install
      - core
      - rust

- name: Install Go
  block:
      - name: Check if Go is installed
        stat:
            path: /usr/local/go/bin/go
        register: go_check

      - name: Download Go
        get_url:
            url: https://go.dev/dl/go1.21.6.linux-amd64.tar.gz
            dest: /tmp/go.tar.gz
            mode: '0644'
        when: not go_check.stat.exists

      - name: Extract Go
        become: true
        unarchive:
            src: /tmp/go.tar.gz
            dest: /usr/local
            remote_src: true
        when: not go_check.stat.exists

      - name: Clean up Go download
        file:
            path: /tmp/go.tar.gz
            state: absent
        when: not go_check.stat.exists
  tags:
      - install
      - core
      - go

- name: Install Python3
  block:
      - name: Check if Python3 is installed
        command: which python3
        register: python3_check
        ignore_errors: true
        changed_when: false

      - name: Check if pip is installed
        command: which pip
        register: pip_check
        ignore_errors: true
        changed_when: false

      - name: Install Python3 and pip
        become: true
        apt:
            name:
                - python3
                - python3-pip
                - python3-venv
                - python3-dev
                - python3-setuptools
            state: present
            update_cache: true
        when: python3_check.rc != 0 or pip_check.rc != 0

      - name: Upgrade pip
        become: true
        pip:
            name: pip
            state: latest
            executable: pip3
        when: python3_check.rc != 0 or pip_check.rc != 0

      - name: Install virtualenv
        become: true
        pip:
            name: virtualenv
            state: present
            executable: pip3
        when: python3_check.rc != 0 or pip_check.rc != 0
  tags:
      - install
      - core
      - python

- name: Install Nerd Fonts
  block:
      - name: Create fonts directory
        file:
            path: '{{ ansible_env.HOME }}/.local/share/fonts'
            state: directory
            mode: '0755'

      - name: Download and install Nerd Fonts
        get_url:
            url: 'https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/{{ item }}.zip'
            dest: '/tmp/{{ item }}.zip'
        loop:
            - JetBrainsMono
            - FiraCode
            - Hack
            - Meslo

      - name: Extract Nerd Fonts
        unarchive:
            src: '/tmp/{{ item }}.zip'
            dest: '{{ ansible_env.HOME }}/.local/share/fonts'
            remote_src: true
        loop:
            - JetBrainsMono
            - FiraCode
            - Hack
            - Meslo

      - name: Clean up downloaded font archives
        file:
            path: '/tmp/{{ item }}.zip'
            state: absent
        loop:
            - JetBrainsMono
            - FiraCode
            - Hack
            - Meslo

      - name: Install private fonts
        ansible.builtin.git:
            accept_hostkey: true
            repo: git@github.com:amahmod/fonts.git
            dest: ~/.local/share/fonts
        tags:
            - install
            - core
            - fonts

      - name: Update font cache
        command: fc-cache -fv
  tags:
      - install
      - core
      - fonts
